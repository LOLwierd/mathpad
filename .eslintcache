[{"/Users/ayaan/Projects/mathpad/src/index.js":"1","/Users/ayaan/Projects/mathpad/src/reportWebVitals.js":"2","/Users/ayaan/Projects/mathpad/src/App.js":"3","/Users/ayaan/Projects/mathpad/src/Drawer.js":"4","/Users/ayaan/Projects/mathpad/src/EditorFile.js":"5","/Users/ayaan/Projects/mathpad/src/CustomListItem.js":"6","/Users/ayaan/Projects/mathpad/src/config.js":"7","/Users/ayaan/Projects/mathpad/src/TinyEditor.js":"8"},{"size":500,"mtime":1609507814766,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1609507814766,"results":"11","hashOfConfig":"10"},{"size":270,"mtime":1609510050524,"results":"12","hashOfConfig":"10"},{"size":3962,"mtime":1609537502256,"results":"13","hashOfConfig":"10"},{"size":4980,"mtime":1609537182702,"results":"14","hashOfConfig":"10"},{"size":916,"mtime":1609514931653,"results":"15","hashOfConfig":"10"},{"size":3349,"mtime":1609531811734,"results":"16","hashOfConfig":"10"},{"size":2135,"mtime":1609541693100,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"165fqxt",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ayaan/Projects/mathpad/src/index.js",[],["38","39"],"/Users/ayaan/Projects/mathpad/src/reportWebVitals.js",[],"/Users/ayaan/Projects/mathpad/src/App.js",["40","41"],"import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport MiniDrawer from \"./Drawer\";\nimport EditorFile from \"./EditorFile\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <MiniDrawer/>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/ayaan/Projects/mathpad/src/Drawer.js",["42","43","44","45"],"import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport {symbols} from \"./config\";\n\nimport EditorFile from \"./EditorFile\";\nimport CustomListItem from \"./CustomListItem\";\nimport TinyEditor from './TinyEditor';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default function MiniDrawer() {\n  const sn = symbols;\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const editorRef = React.useRef(null);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerToggle = () => {\n    setOpen(!open);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerToggle}>\n            {!open ? <MenuIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {sn.map((text, index) => (\n            <CustomListItem\n              name={text.name}\n              symbol={text.symbol}\n              open={open}\n              editor={editorRef}\n            />\n          ))}\n        </List>\n        {/*<Divider />*/}\n        {/*<List>*/}\n        {/*    {['All mail', 'Trash', 'Spam'].map((text, index) => (*/}\n        {/*        <ListItem button key={text}>*/}\n\n        {/*            <ListItemText primary={text} />*/}\n        {/*        </ListItem>*/}\n        {/*    ))}*/}\n        {/*</List>*/}\n      </Drawer>\n      <main className={classes.content}>\n        {/*<div className={classes.toolbar} />*/}\n        <TinyEditor ref={editorRef} />\n      </main>\n    </div>\n  );\n}\n","/Users/ayaan/Projects/mathpad/src/EditorFile.js",["46"],"import React, { Component } from 'react';\nimport { EditorState, ContentState, Modifier, SelectionState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { shortCuts } from \"./config\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\n\nexport default class ControlledEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.editorRef = React.createRef();\n        this.state = {\n            editorState: EditorState.createEmpty(),\n            editorText: \"\",\n            inlineStyle: new Set(),\n        };\n        this.shortcuts = shortCuts;\n        // setTimeout(()=>{\n        //     this.sendTextToEditor(\"My bich is itching\")\n        // }, 2000);\n    }\n\n    componentDidMount = () => {\n        this.sendTextToEditor(\"\");\n    }\n\n    focusEditor = () => {\n        if (this.editor) {\n            //   this.editor.focusEditor();\n            EditorState.moveFocusToEnd(this.state.editorState)\n            console.log(\"1. Editor has the focus now\");\n        }\n    };\n\n    sendTextToEditor = (text) => {\n        this.setState({ editorState: this.insertText(text, this.state.editorState) });\n        this.focusEditor();\n    }\n\n    insertText = (text, editorState) => {\n        const currentContent = editorState.getCurrentContent(),\n            currentSelection = editorState.getSelection();\n\n        const newContent = Modifier.replaceText(\n            currentContent,\n            currentSelection,\n            text,\n            editorState.getCurrentInlineStyle()\n        );\n\n        const newEditorState = EditorState.push(editorState, newContent, 'insert-characters');\n        return EditorState.forceSelection(newEditorState, newContent.getSelectionAfter());\n    }\n\n    // Lord if u exist plij forgive me for dis.\n    //OK dis works but cannot apply inline stylez\n    onEditorStateChange = (editorState) => {\n        var contentNow = editorState.getCurrentContent().getPlainText();\n        if (contentNow !== this.state.editorText) {\n            this.shortcuts.forEach((val) => {\n                contentNow = contentNow.replace(val.shortcut, val.symbol);\n            });\n            contentNow = contentNow.replace(\"Ayaan\", \"Genius\");\n            // var cs = ContentState.createFromText(contentNow);\n            // const currentSelection = editorState.getSelection();\n            let currentContent = editorState.getCurrentContent();\n            const firstBlock = currentContent.getBlockMap().first();\n            const lastBlock = currentContent.getBlockMap().last();\n            const firstBlockKey = firstBlock.getKey();\n            const lastBlockKey = lastBlock.getKey();\n            const lengthOfLastBlock = lastBlock.getLength();\n          \n            let newSelection = new SelectionState({\n              anchorKey: firstBlockKey,\n              anchorOffset: 0,\n              focusKey: lastBlockKey,\n              focusOffset: lengthOfLastBlock\n            });\n            const newContent = Modifier.replaceText(\n                editorState.getCurrentContent(),\n                newSelection,\n                contentNow,\n                editorState.getCurrentInlineStyle()\n            );\n            const stateWithContent = EditorState.createWithContent(newContent);\n            \n            // let updateSelection = stateWithContent.getSelection().merge({\n            //     anchorOffset: currentSelection.getAnchorOffset(),\n            //     focusOffset: currentSelection.getFocusOffset(),\n            //     isBackward: true,\n            //   })\n            this.setState({\n                editorState: EditorState.forceSelection(stateWithContent, newContent.getSelectionAfter()),\n                editorText: contentNow,\n                inlineStyle: stateWithContent.getCurrentInlineStyle()\n            });\n        }\n        else if(this.state.inlineStyle !== editorState.getCurrentInlineStyle()){\n            console.log(\"In INline STyle Change\");\n            console.log(editorState.getCurrentInlineStyle().toList().toString());\n            const contentState = Modifier.applyInlineStyle(editorState.getCurrentContent(), editorState.getSelection(), editorState.getCurrentInlineStyle().first());\n            console.log(contentState.getCurrentInlineStyle)\n            this.setState({\n                editorState: EditorState.push(editorState, contentState, \"change-inline-style\"),\n                editorText: contentNow,\n                inlineStyle: editorState.getCurrentInlineStyle()\n            });\n        }\n    };\n\n    render() {\n        const { editorState } = this.state;\n        return (\n            <div>\n                <Editor\n                    ref={this.editorRef}\n                    editorState={editorState}\n                    toolbarClassName=\"demo-toolbar\"\n                    wrapperClassName=\"demo-wrapper\"\n                    editorClassName=\"demo-editor\"\n                    onEditorStateChange={this.onEditorStateChange}\n                />\n            </div>\n\n        )\n    }\n}\n","/Users/ayaan/Projects/mathpad/src/CustomListItem.js",[],"/Users/ayaan/Projects/mathpad/src/config.js",[],"/Users/ayaan/Projects/mathpad/src/TinyEditor.js",["47"],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":12},{"ruleId":"52","severity":1,"message":"56","line":5,"column":8,"nodeType":"54","messageId":"55","endLine":5,"endColumn":18},{"ruleId":"52","severity":1,"message":"56","line":13,"column":8,"nodeType":"54","messageId":"55","endLine":13,"endColumn":18},{"ruleId":"52","severity":1,"message":"57","line":85,"column":9,"nodeType":"54","messageId":"55","endLine":85,"endColumn":14},{"ruleId":"52","severity":1,"message":"58","line":89,"column":9,"nodeType":"54","messageId":"55","endLine":89,"endColumn":25},{"ruleId":"52","severity":1,"message":"59","line":95,"column":9,"nodeType":"54","messageId":"55","endLine":95,"endColumn":26},{"ruleId":"52","severity":1,"message":"60","line":2,"column":23,"nodeType":"54","messageId":"55","endLine":2,"endColumn":35},{"ruleId":"61","severity":1,"message":"62","line":52,"column":25,"nodeType":"63","messageId":"64","endLine":54,"endColumn":66},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'EditorFile' is defined but never used.","'theme' is assigned a value but never used.","'handleDrawerOpen' is assigned a value but never used.","'handleDrawerClose' is assigned a value but never used.","'ContentState' is defined but never used.","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","no-global-assign","no-unsafe-negation"]
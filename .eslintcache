[{"/Users/ayaan/Projects/mathpad/src/index.js":"1","/Users/ayaan/Projects/mathpad/src/reportWebVitals.js":"2","/Users/ayaan/Projects/mathpad/src/App.js":"3","/Users/ayaan/Projects/mathpad/src/Drawer.js":"4","/Users/ayaan/Projects/mathpad/src/EditorFile.js":"5","/Users/ayaan/Projects/mathpad/src/CustomListItem.js":"6"},{"size":500,"mtime":1609507814766,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1609507814766,"results":"9","hashOfConfig":"8"},{"size":270,"mtime":1609510050524,"results":"10","hashOfConfig":"8"},{"size":6614,"mtime":1609515030987,"results":"11","hashOfConfig":"8"},{"size":2438,"mtime":1609516015562,"results":"12","hashOfConfig":"8"},{"size":916,"mtime":1609514931653,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"165fqxt",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ayaan/Projects/mathpad/src/index.js",[],["30","31"],"/Users/ayaan/Projects/mathpad/src/reportWebVitals.js",[],"/Users/ayaan/Projects/mathpad/src/App.js",["32","33"],"import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport MiniDrawer from \"./Drawer\";\nimport EditorFile from \"./EditorFile\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <MiniDrawer/>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/ayaan/Projects/mathpad/src/Drawer.js",["34","35","36"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nimport EditorFile from \"./EditorFile\";\nimport CustomListItem from \"./CustomListItem\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(1),\n    },\n}));\n\nexport default function MiniDrawer() {\n\n    const sn = [\n        {\n            \"name\": \"Belongs To\",\n            \"symbol\": \"∈\"\n        },\n        {\n            \"name\": \"Null\",\n            \"symbol\": \"∅\"\n        },\n        {\n            \"name\": \"For All\",\n            \"symbol\": \"∀\"\n        },\n        {\n            \"name\": \"There Exists\",\n            \"symbol\": \"∃\"\n        },\n        {\n            \"name\": \"Conjunction\",\n            \"symbol\": \"∧\"\n        },\n        {\n            \"name\": \"Disjunction\",\n            \"symbol\": \"∨\"\n        },\n        {\n            \"name\": \"Negation\",\n            \"symbol\": \"¬\"\n        },\n        {\n            \"name\": \"Conditional\",\n            \"symbol\": \"→\"\n        },\n        {\n            \"name\": \"Biconditional\",\n            \"symbol\": \"↔\"\n        },\n        {\n            \"name\": \"Implication\",\n            \"symbol\": \"⇒\"\n        },\n        {\n            \"name\": \"Equivalence\",\n            \"symbol\": \"⇔\"\n        },\n        \n        {\n            \"name\": \"Less then, Equal To\",\n            \"symbol\": \"≤\"\n        },\n        {\n            \"name\": \"Square Root\",\n            \"symbol\": \"√\"\n        },\n       \n        {\n            \"name\": \"Subset\",\n            \"symbol\": \"⊆\"\n        },\n       \n        {\n            \"name\": \"! Belongs To\",\n            \"symbol\": \"∉\"\n        },\n        {\n            \"name\": \"! Subset of\",\n            \"symbol\": \"⊄\"\n        },\n        {\n            \"name\": \"Union\",\n            \"symbol\": \"∪\"\n        },\n        {\n            \"name\": \"Intersection\",\n            \"symbol\": \"∩\"\n        },\n        {\n            \"name\": \"! Equals To\",\n            \"symbol\": \"≠\"\n        },\n        {\n            \"name\": \"Sigma\",\n            \"symbol\": \"∑\"\n        },\n        {\n            \"name\": \"Mu\",\n            \"symbol\": \"μ\"\n        },\n        {\n            \"name\": \"Alpha\",\n            \"symbol\": \"α\"\n        },\n        {\n            \"name\": \"Beta\",\n            \"symbol\":\"β\"\n        },\n        {\n            \"name\":\"Theta\",\n            \"symbol\":\"θ\"\n        },\n        {\n            \"name\":\"Lambda\",\n            \"symbol\":\"λ\"\n        },\n        {\n            \"name\":\"Pi\",\n            \"symbol\":\"π\"\n        },\n        {\n            \"name\":\"Alef\",\n            \"symbol\":\"ℵ\"\n        }\n    ];\n    \n\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n    const editorRef = React.useRef(null);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    const handleDrawerToggle = ()=>{\n        setOpen(!open);\n    };\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    }),\n                }}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerToggle}>\n                        {!open? <MenuIcon /> : <ChevronLeftIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    {sn.map((text, index) => (\n                       <CustomListItem name={text.name} symbol={text.symbol} open={open} editor={editorRef}/>\n                    ))}\n                </List>\n                {/*<Divider />*/}\n                {/*<List>*/}\n                {/*    {['All mail', 'Trash', 'Spam'].map((text, index) => (*/}\n                {/*        <ListItem button key={text}>*/}\n\n                {/*            <ListItemText primary={text} />*/}\n                {/*        </ListItem>*/}\n                {/*    ))}*/}\n                {/*</List>*/}\n            </Drawer>\n            <main className={classes.content}>\n                {/*<div className={classes.toolbar} />*/}\n                <EditorFile ref={editorRef}/>\n            </main>\n        </div>\n    );\n}\n","/Users/ayaan/Projects/mathpad/src/EditorFile.js",["37","38"],"import React, { Component } from 'react';\nimport { EditorState, ContentState, Modifier } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\n\nexport default class ControlledEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.editorRef = React.createRef();\n        this.state = {\n            editorState: EditorState.createEmpty(),\n        };\n        // setTimeout(()=>{\n        //     this.sendTextToEditor(\"My bich is itching\")\n        // }, 2000);\n    }\n\n    componentDidMount = () => {\n        this.sendTextToEditor(\"\");\n    }\n\n    focusEditor = () => {\n        if (this.editor) {\n            //   this.editor.focusEditor();\n            EditorState.moveFocusToEnd(this.state.editorState)\n            console.log(\"1. Editor has the focus now\");\n        }\n    };\n\n    sendTextToEditor = (text) => {\n        this.setState({ editorState: this.insertText(text, this.state.editorState) });\n        this.focusEditor();\n    }\n\n    insertText = (text, editorState) => {\n        const currentContent = editorState.getCurrentContent(),\n            currentSelection = editorState.getSelection();\n\n        const newContent = Modifier.replaceText(\n            currentContent,\n            currentSelection,\n            text,\n            editorState.getCurrentInlineStyle()\n        );\n\n        const newEditorState = EditorState.push(editorState, newContent, 'insert-characters');\n        return EditorState.forceSelection(newEditorState, newContent.getSelectionAfter());\n    }\n\n    onEditorStateChange = (editorState) => {\n        var contentNow = editorState.getCurrentContent().getPlainText();\n        // contentNow.replace(\"Ayaan\", \"Chakko\");\n        var cs = ContentState.createFromText(editorState.getCurrentContent().getPlainText());\n        var es = EditorState.createWithContent(cs);\n        this.setState({\n            editorState\n        });\n    };\n\n    render() {\n        const { editorState } = this.state;\n        return (\n            <div>\n                <Editor\n                    ref={this.editorRef}\n                    editorState={editorState}\n                    toolbarClassName=\"demo-toolbar\"\n                    wrapperClassName=\"demo-wrapper\"\n                    editorClassName=\"demo-editor\"\n                    onEditorStateChange={this.onEditorStateChange}\n                />\n\n            </div>\n\n        )\n    }\n}\n","/Users/ayaan/Projects/mathpad/src/CustomListItem.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":8,"nodeType":"45","messageId":"46","endLine":1,"endColumn":12},{"ruleId":"43","severity":1,"message":"47","line":5,"column":8,"nodeType":"45","messageId":"46","endLine":5,"endColumn":18},{"ruleId":"43","severity":1,"message":"48","line":198,"column":11,"nodeType":"45","messageId":"46","endLine":198,"endColumn":16},{"ruleId":"43","severity":1,"message":"49","line":202,"column":11,"nodeType":"45","messageId":"46","endLine":202,"endColumn":27},{"ruleId":"43","severity":1,"message":"50","line":208,"column":11,"nodeType":"45","messageId":"46","endLine":208,"endColumn":28},{"ruleId":"43","severity":1,"message":"51","line":52,"column":13,"nodeType":"45","messageId":"46","endLine":52,"endColumn":23},{"ruleId":"43","severity":1,"message":"52","line":55,"column":13,"nodeType":"45","messageId":"46","endLine":55,"endColumn":15},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'EditorFile' is defined but never used.","'theme' is assigned a value but never used.","'handleDrawerOpen' is assigned a value but never used.","'handleDrawerClose' is assigned a value but never used.","'contentNow' is assigned a value but never used.","'es' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
{"version":3,"sources":["logo.svg","config.js","InputSlider.js","CustomOption.js","EditorFile.js","CustomListItem.js","Drawer.js","App.js","reportWebVitals.js","index.js"],"names":["symbols","name","symbol","shortCuts","shortcut","withStyles","root","color","height","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","makeStyles","theme","spacing","margin","PrettoSlider","useStyles","avatar","blue","toolbarButtons","button","background","Canvas","props","classes","saveableCanvas","React","useRef","onClose","selectedValue","open","useState","value","setValue","handleClose","saveCanvas","localStorage","setItem","current","getSaveData","Dialog","fullScreen","aria-labelledby","AppBar","className","appBar","Toolbar","IconButton","edge","onClick","aria-label","Typography","variant","title","Grid","container","alignItems","item","xs","onChange","event","newValue","Number","step","min","max","Input","input","target","Math","onBlur","inputProps","type","Button","clear","undo","ref","saveData","getItem","brushRadius","lazyRadius","immediateLoading","style","CustomOption","modalIsOpen","setIsOpen","ControlledEditor","componentDidMount","sendTextToEditor","console","log","replaceString","chars","editorState","contentState","getCurrentContent","selectionState","getSelection","block","getBlockForKey","getAnchorKey","shortcuts","forEach","val","SC","SYM","getText","indexOf","currentSelectionState","state","newContentState","Modifier","replaceText","merge","anchorOffset","getEndOffset","length","focusOffset","setState","EditorState","push","focusEditor","editor","moveFocusToEnd","text","insertText","currentContent","currentSelection","newContent","getCurrentInlineStyle","newEditorState","forceSelection","getSelectionAfter","onEditorStateChange","contentNow","getPlainText","editorText","editorRef","createRef","createEmpty","inlineStyle","Set","options","this","toolbar","list","inDropdown","textAlign","handleBeforeInput","toolbarClassName","wrapperClassName","editorClassName","toolbarCustomButtons","Component","CustomListItem","listItemText","fontSize","filter","v","Tooltip","ListItem","copy","ListItemText","primary","secondary","drawerWidth","display","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","justifyContent","padding","mixins","content","flexGrow","MiniDrawer","sn","useTheme","setOpen","CssBaseline","Drawer","clsx","paper","Divider","List","map","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a5eadcf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const symbols = [\r\n    {\r\n      name: \"Belongs To\",\r\n      symbol: \"∈\",\r\n    },\r\n    {\r\n      name: \"Null\",\r\n      symbol: \"∅\",\r\n    },\r\n    {\r\n      name: \"For All\",\r\n      symbol: \"∀\",\r\n    },\r\n    {\r\n      name: \"There Exists\",\r\n      symbol: \"∃\",\r\n    },\r\n    {\r\n      name: \"Delta\",\r\n      symbol: \"δ\",\r\n    },\r\n    {\r\n      name: \"Conjunction\",\r\n      symbol: \"∧\",\r\n    },\r\n    {\r\n      name: \"Disjunction\",\r\n      symbol: \"∨\",\r\n    },\r\n    {\r\n      name: \"Negation\",\r\n      symbol: \"¬\",\r\n    },\r\n    {\r\n      name: \"Conditional\",\r\n      symbol: \"→\",\r\n    },\r\n    {\r\n      name: \"Biconditional\",\r\n      symbol: \"↔\",\r\n    },\r\n    {\r\n      name: \"Implication\",\r\n      symbol: \"⇒\",\r\n    },\r\n    {\r\n      name: \"Equivalence\",\r\n      symbol: \"⇔\",\r\n    },\r\n\r\n    {\r\n      name: \"Less then, Equal To\",\r\n      symbol: \"≤\",\r\n    },\r\n    {\r\n      name: \"Square Root\",\r\n      symbol: \"√\",\r\n    },\r\n\r\n    {\r\n      name: \"Subset\",\r\n      symbol: \"⊆\",\r\n    },\r\n\r\n    {\r\n      name: \"! Belongs To\",\r\n      symbol: \"∉\",\r\n    },\r\n    {\r\n      name: \"! Subset of\",\r\n      symbol: \"⊄\",\r\n    },\r\n    {\r\n      name: \"Union\",\r\n      symbol: \"∪\",\r\n    },\r\n    {\r\n      name: \"Intersection\",\r\n      symbol: \"∩\",\r\n    },\r\n    {\r\n      name: \"! Equals To\",\r\n      symbol: \"≠\",\r\n    },\r\n    {\r\n      name: \"Sigma\",\r\n      symbol: \"∑\",\r\n    },\r\n    {\r\n      name: \"Mu\",\r\n      symbol: \"μ\",\r\n    },\r\n    {\r\n      name: \"Alpha\",\r\n      symbol: \"α\",\r\n    },\r\n    {\r\n      name: \"Beta\",\r\n      symbol: \"β\",\r\n    },\r\n    {\r\n      name: \"Theta\",\r\n      symbol: \"θ\",\r\n    },\r\n    {\r\n      name: \"Lambda\",\r\n      symbol: \"λ\",\r\n    },\r\n    {\r\n      name: \"Pi\",\r\n      symbol: \"π\",\r\n    },\r\n    {\r\n      name: \"Alef\",\r\n      symbol: \"ℵ\",\r\n    },\r\n  ];\r\n\r\n  export var shortCuts = [\r\n    {\r\n      shortcut: \"\\\\bt\",\r\n      symbol: \"∈\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\null\",\r\n      symbol: \"∅\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\fa\",\r\n      symbol: \"∀\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\te\",\r\n      symbol: \"∃\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\delta\",\r\n      symbol: \"δ\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\and\",\r\n      symbol: \"∧\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\or\",\r\n      symbol: \"∨\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\not\",\r\n      symbol: \"¬\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\cond\",\r\n      symbol: \"→\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\bicond\",\r\n      symbol: \"↔\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\impl\",\r\n      symbol: \"⇒\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\equi\",\r\n      symbol: \"⇔\",\r\n    },\r\n\r\n    {\r\n      shortcut: \"\\\\<=\",\r\n      symbol: \"≤\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\sqr\",\r\n      symbol: \"√\",\r\n    },\r\n\r\n    {\r\n      shortcut: \"\\\\sub\",\r\n      symbol: \"⊆\",\r\n    },\r\n\r\n    {\r\n      shortcut: \"\\\\!bt\",\r\n      symbol: \"∉\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\!sub\",\r\n      symbol: \"⊄\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\U\",\r\n      symbol: \"∪\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\int\",\r\n      symbol: \"∩\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\!=\",\r\n      symbol: \"≠\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\sigma\",\r\n      symbol: \"∑\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\mu\",\r\n      symbol: \"μ\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\alpha\",\r\n      symbol: \"α\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\beta\",\r\n      symbol: \"β\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\theta\",\r\n      symbol: \"θ\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\lambda\",\r\n      symbol: \"λ\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\pi\",\r\n      symbol: \"π\",\r\n    },\r\n    {\r\n      shortcut: \"\\\\alef\",\r\n      symbol: \"ℵ\",\r\n    },\r\n  ];","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Input from '@material-ui/core/Input';\r\nimport BrushIcon from '@material-ui/icons/Brush';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst PrettoSlider = withStyles({\r\n    root: {\r\n      color: '#52af77',\r\n      height: 8,\r\n    },\r\n    thumb: {\r\n      height: 24,\r\n      width: 24,\r\n      backgroundColor: '#fff',\r\n      border: '2px solid currentColor',\r\n      marginTop: -8,\r\n      marginLeft: -12,\r\n      '&:focus, &:hover, &$active': {\r\n        boxShadow: 'inherit',\r\n      },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n    rail: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n  })(Slider);\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: 300 + theme.spacing(3) * 2,\r\n    },\r\n    margin: {\r\n      height: theme.spacing(3),\r\n    },\r\n  }));\r\n\r\nexport default function InputSlider() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(30);\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (value < 0) {\r\n      setValue(0);\r\n    } else if (value > 100) {\r\n      setValue(100);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item>\r\n          <BrushIcon />\r\n        </Grid>\r\n        <Grid item xs>\r\n          <PrettoSlider\r\n            value={typeof value === 'number' ? value : 0}\r\n            onChange={handleSliderChange}\r\n            aria-labelledby=\"input-slider\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Input\r\n            className={classes.input}\r\n            value={value}\r\n            margin=\"dense\"\r\n            onChange={handleInputChange}\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              step: 10,\r\n              min: 0,\r\n              max: 100,\r\n              type: 'number',\r\n              'aria-labelledby': 'input-slider',\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport CanvasDraw from \"react-canvas-draw\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport InputSlider from './InputSlider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Input from '@material-ui/core/Input';\r\nimport BrushIcon from '@material-ui/icons/Brush';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: '#52af77',\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: '#fff',\r\n    border: '2px solid currentColor',\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'inherit',\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-50% + 4px)',\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n  toolbarButtons: {\r\n    marginLeft: 'auto',\r\n  },\r\n  button: {\r\n    height: '28px',\r\n    border: '1px solid #F1F1F1',\r\n    borderRadius: '2px',\r\n    background: 'white',\r\n\r\n  },\r\n  root: {\r\n    width: 300 + theme.spacing(3) * 2,\r\n    marginLeft: 'auto',\r\n    // marginRight: 'auto',\r\n  },\r\n  // margin: {\r\n  //   height: theme.spacing(3),\r\n  // },\r\n}));\r\n\r\n\r\n// const useStyles = makeStyles({\r\n\r\n// });\r\n\r\nfunction Canvas(props) {\r\n  const classes = useStyles();\r\n  const saveableCanvas = React.useRef(null);\r\n  const { onClose, selectedValue, open } = props;\r\n  const [value, setValue] = React.useState(4);\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const saveCanvas = () => {\r\n    localStorage.setItem(\r\n      \"savedDrawing\",\r\n      saveableCanvas.current.getSaveData()\r\n    );\r\n  }\r\n\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setValue(Number(newValue));\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setValue(event.target.value === '' ? 0 : Math.min(Number(event.target.value), 30));\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (value < 0) {\r\n      setValue(0);\r\n    } else if (value > 30) {\r\n      setValue(30);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog fullScreen onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <AppBar className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Canvas\r\n            </Typography>\r\n          <div className={classes.root}>\r\n            <Grid container spacing={2} alignItems=\"center\">\r\n              <Grid item>\r\n                <BrushIcon />\r\n              </Grid>\r\n              <Grid item xs>\r\n                <PrettoSlider\r\n                  value={typeof value === 'number' ? value : 0}\r\n                  onChange={handleSliderChange}\r\n                  aria-labelledby=\"input-slider\"\r\n                  step={2}\r\n                  min={1}\r\n                  max={30}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Input\r\n                  className={classes.input}\r\n                  value={value}\r\n                  margin=\"dense\"\r\n                  onChange={handleInputChange}\r\n                  onBlur={handleBlur}\r\n                  inputProps={{\r\n                    step: 2,\r\n                    min: 1,\r\n                    max: 30,\r\n                    type: 'number',\r\n                    'aria-labelledby': 'input-slider',\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <div className={classes.toolbarButtons}>\r\n            <Button color=\"inherit\" onClick={() => { saveableCanvas.current.clear(); saveCanvas(); }}>\r\n              Clear\r\n            </Button>\r\n            <Button color=\"inherit\" onClick={() => { saveableCanvas.current.undo(); saveCanvas(); }}>\r\n              Undo\r\n            </Button>\r\n          </div>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n      <CanvasDraw\r\n        ref={saveableCanvas}\r\n        saveData={localStorage.getItem(\"savedDrawing\")}\r\n        brushRadius={value}\r\n        onChange={saveCanvas}\r\n        lazyRadius={0}\r\n        immediateLoading={true}\r\n        style={{\r\n          width: '100%',\r\n          height: '100%',\r\n        }}\r\n      />\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default function CustomOption() {\r\n  const classes = useStyles();\r\n  var subtitle;\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button className={classes.button}\r\n        onClick={openModal}>Canvas</button>\r\n      <Canvas open={modalIsOpen} onClose={closeModal} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { EditorState, ContentState, Modifier, SelectionState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { shortCuts } from \"./config\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport CustomOption from \"./CustomOption.js\";\r\n\r\n\r\nexport default class ControlledEditor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.editorRef = React.createRef();\r\n\r\n        this.state = {\r\n            editorState: EditorState.createEmpty(),\r\n            editorText: '',\r\n            inlineStyle: new Set(),\r\n        };\r\n        this.shortcuts = shortCuts;\r\n        this.options = ['inline', 'blockType', 'fontSize', 'fontFamily', 'textAlign', 'emoji', 'history'];\r\n    }\r\n\r\n    componentDidMount = () => {\r\n       // var text = localStorage.getItem('editorText') === 'true'?localStorage.getItem('editorText'):'';\r\n      //  console.log(\"In component did mount \",localStorage.getItem('editorText') === 'true')\r\n        this.sendTextToEditor(localStorage.getItem('editorText'));\r\n        //Content getting\r\n        console.log(\"In component did mount\",localStorage.getItem('editorText'))\r\n    }\r\n\r\n    replaceString = (chars, editorState) => {\r\n        const contentState = editorState.getCurrentContent();\r\n        const selectionState = editorState.getSelection();\r\n        const block = contentState.getBlockForKey( selectionState.getAnchorKey() );\r\n\r\n        this.shortcuts.forEach((val) => {\r\n            const SC =  val.shortcut;\r\n        const SYM = val.symbol;\r\n        // Detect a match. Can be substituted with a RegEx test condition.\r\n        if ( block.getText().indexOf(SC) !== -1 ) {\r\n            const currentSelectionState = this.state.editorState.getSelection();\r\n            const newContentState = Modifier.replaceText(\r\n                contentState,\r\n                // The text to replace, which is represented as a range with a start & end offset.\r\n                selectionState.merge( {\r\n                    // The starting position of the range to be replaced.\r\n                    anchorOffset: currentSelectionState.getEndOffset() - SC.length,\r\n                    // The end position of the range to be replaced.\r\n                    focusOffset: currentSelectionState.getEndOffset()\r\n                } ),\r\n                // The new string to replace the old string.\r\n               SYM\r\n            );\r\n\r\n            this.setState( {\r\n                editorState: EditorState.push(\r\n                    editorState,\r\n                    newContentState,\r\n                    'replace-text'\r\n                )\r\n            } )\r\n        }\r\n    });\r\n    }\r\n\r\n    focusEditor = () => {\r\n        if (this.editor) {\r\n            //   this.editor.focusEditor();\r\n            EditorState.moveFocusToEnd(this.state.editorState)\r\n            console.log(\"1. Editor has the focus now\");\r\n        }\r\n    };\r\n\r\n    sendTextToEditor = (text) => {\r\n        this.setState({ editorState: this.insertText(text, this.state.editorState) });\r\n        this.focusEditor();\r\n    }\r\n\r\n    insertText = (text, editorState) => {\r\n        const currentContent = editorState.getCurrentContent(),\r\n            currentSelection = editorState.getSelection();\r\n\r\n        const newContent = Modifier.replaceText(\r\n            currentContent,\r\n            currentSelection,\r\n            text,\r\n            editorState.getCurrentInlineStyle()\r\n        );\r\n\r\n        const newEditorState = EditorState.push(editorState, newContent, 'insert-characters');\r\n        return EditorState.forceSelection(newEditorState, newContent.getSelectionAfter());\r\n    }\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        var contentNow = editorState.getCurrentContent().getPlainText();\r\n        localStorage.setItem('editorText', contentNow);\r\n            this.setState({\r\n                editorState: editorState,\r\n                editorText: contentNow,\r\n            });\r\n\r\n        console.log(\"In editor state change\",localStorage.getItem('editorText') === 'true')\r\n    };\r\n\r\n    render() {\r\n        const { editorState } = this.state;\r\n        return (\r\n            <div>\r\n                <Editor\r\n                    toolbar={{\r\n                        options: this.options,\r\n                        list: { inDropdown: true },\r\n                        textAlign: { inDropdown: true },\r\n                      }}\r\n                    ref={this.editorRef}\r\n                    editorState={editorState}\r\n                    handleBeforeInput={ this.replaceString }\r\n                    toolbarClassName=\"demo-toolbar\"\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    toolbarCustomButtons={[<CustomOption />]}\r\n                />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport copy from 'copy-to-clipboard'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { shortCuts } from './config';\r\nimport { Tooltip } from \"@material-ui/core\";\r\n\r\nfunction CustomListItem(props) {\r\n    const useStyles = makeStyles({\r\n        listItemText: {\r\n            fontSize: '1.5rem'\r\n        }\r\n    });\r\n    var title = shortCuts.filter(v =>\r\n        v.symbol === props.symbol\r\n    )[0].shortcut;\r\n    const classes = useStyles();\r\n    const customCopy = () => {\r\n        copy(props.symbol);\r\n        props.editor.current.sendTextToEditor(props.symbol);\r\n    }\r\n    return (\r\n        <Tooltip title={title}>\r\n            <ListItem button key={props.name} onClick={customCopy}>\r\n                {props.open ? <ListItemText classes={{ primary: classes.listItemText }} primary={props.symbol} secondary={props.name} />\r\n                    :\r\n                    <ListItemText classes={{ primary: classes.listItemText }} primary={props.symbol} />}\r\n\r\n            </ListItem>\r\n        </Tooltip>\r\n    );\r\n}\r\n\r\nexport default CustomListItem;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport {symbols} from \"./config\";\r\n\r\nimport EditorFile from \"./EditorFile\";\r\nimport CustomListItem from \"./CustomListItem\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer() {\r\n  const sn = symbols;\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const editorRef = React.useRef(null);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerToggle}>\r\n            {!open ? <MenuIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {sn.map((text, index) => (\r\n            <CustomListItem\r\n              name={text.name}\r\n              symbol={text.symbol}\r\n              open={open}\r\n              editor={editorRef}\r\n            />\r\n          ))}\r\n        </List>\r\n        {/*<Divider />*/}\r\n        {/*<List>*/}\r\n        {/*    {['All mail', 'Trash', 'Spam'].map((text, index) => (*/}\r\n        {/*        <ListItem button key={text}>*/}\r\n\r\n        {/*            <ListItemText primary={text} />*/}\r\n        {/*        </ListItem>*/}\r\n        {/*    ))}*/}\r\n        {/*</List>*/}\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        {/*<div className={classes.toolbar} />*/}\r\n        <EditorFile ref={editorRef} />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport MiniDrawer from \"./Drawer\";\nimport EditorFile from \"./EditorFile\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <MiniDrawer/>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
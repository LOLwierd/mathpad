{"version":3,"sources":["logo.svg","EditorFile.js","CustomListItem.js","Drawer.js","App.js","reportWebVitals.js","index.js"],"names":["ControlledEditor","props","componentDidMount","sendTextToEditor","focusEditor","editor","EditorState","moveFocusToEnd","state","editorState","console","log","text","setState","insertText","currentContent","getCurrentContent","currentSelection","getSelection","newContent","Modifier","replaceText","getCurrentInlineStyle","newEditorState","push","forceSelection","getSelectionAfter","onEditorStateChange","getPlainText","cs","ContentState","createFromText","createWithContent","editorRef","React","createRef","createEmpty","this","ref","toolbarClassName","wrapperClassName","editorClassName","Component","CustomListItem","classes","makeStyles","listItemText","fontSize","useStyles","ListItem","button","onClick","copy","symbol","current","open","ListItemText","primary","secondary","name","drawerWidth","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","MiniDrawer","useTheme","useState","setOpen","useRef","className","CssBaseline","Drawer","variant","clsx","paper","IconButton","Divider","List","map","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7877ebbc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport { EditorState, ContentState, Modifier } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\n\nexport default class ControlledEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.editorRef = React.createRef();\n        this.state = {\n            editorState: EditorState.createEmpty(),\n        };\n        // setTimeout(()=>{\n        //     this.sendTextToEditor(\"My bich is itching\")\n        // }, 2000);\n    }\n\n    componentDidMount = () => {\n        this.sendTextToEditor(\"\");\n    }\n\n    focusEditor = () => {\n        if (this.editor) {\n            //   this.editor.focusEditor();\n            EditorState.moveFocusToEnd(this.state.editorState)\n            console.log(\"1. Editor has the focus now\");\n        }\n    };\n\n    sendTextToEditor = (text) => {\n        this.setState({ editorState: this.insertText(text, this.state.editorState) });\n        this.focusEditor();\n    }\n\n    insertText = (text, editorState) => {\n        const currentContent = editorState.getCurrentContent(),\n            currentSelection = editorState.getSelection();\n\n        const newContent = Modifier.replaceText(\n            currentContent,\n            currentSelection,\n            text,\n            editorState.getCurrentInlineStyle()\n        );\n\n        const newEditorState = EditorState.push(editorState, newContent, 'insert-characters');\n        return EditorState.forceSelection(newEditorState, newContent.getSelectionAfter());\n    }\n\n    onEditorStateChange = (editorState) => {\n        var contentNow = editorState.getCurrentContent().getPlainText();\n        // contentNow.replace(\"Ayaan\", \"Chakko\");\n        var cs = ContentState.createFromText(editorState.getCurrentContent().getPlainText());\n        var es = EditorState.createWithContent(cs);\n        this.setState({\n            editorState\n        });\n    };\n\n    render() {\n        const { editorState } = this.state;\n        return (\n            <div>\n                <Editor\n                    ref={this.editorRef}\n                    editorState={editorState}\n                    toolbarClassName=\"demo-toolbar\"\n                    wrapperClassName=\"demo-wrapper\"\n                    editorClassName=\"demo-editor\"\n                    onEditorStateChange={this.onEditorStateChange}\n                />\n\n            </div>\n\n        )\n    }\n}\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport copy from 'copy-to-clipboard'\nimport { makeStyles} from '@material-ui/core/styles';\n\nfunction CustomListItem(props) {\n    const useStyles = makeStyles({\n        listItemText: {\n          fontSize: '1.5rem'\n      }\n    });\n    \n    const classes = useStyles();\n    const customCopy = () => {\n        copy(props.symbol);\n        props.editor.current.sendTextToEditor(props.symbol);\n    }\n    return (\n        <ListItem button key={props.name} onClick={customCopy}>\n            {props.open ? <ListItemText classes={{ primary: classes.listItemText }} primary={props.symbol}  secondary={props.name} /> \n            : \n            <ListItemText classes={{ primary: classes.listItemText }} primary={props.symbol} />}\n\n        </ListItem>\n    );\n}\n\nexport default CustomListItem;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\n\nimport EditorFile from \"./EditorFile\";\nimport CustomListItem from \"./CustomListItem\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default function MiniDrawer() {\n  const sn = [\n    {\n      name: \"Belongs To\",\n      symbol: \"∈\",\n    },\n    {\n      name: \"Null\",\n      symbol: \"∅\",\n    },\n    {\n      name: \"For All\",\n      symbol: \"∀\",\n    },\n    {\n      name: \"There Exists\",\n      symbol: \"∃\",\n    },\n    {\n      name: \"Delta\",\n      symbol: \"δ\",\n    },\n    {\n      name: \"Conjunction\",\n      symbol: \"∧\",\n    },\n    {\n      name: \"Disjunction\",\n      symbol: \"∨\",\n    },\n    {\n      name: \"Negation\",\n      symbol: \"¬\",\n    },\n    {\n      name: \"Conditional\",\n      symbol: \"→\",\n    },\n    {\n      name: \"Biconditional\",\n      symbol: \"↔\",\n    },\n    {\n      name: \"Implication\",\n      symbol: \"⇒\",\n    },\n    {\n      name: \"Equivalence\",\n      symbol: \"⇔\",\n    },\n\n    {\n      name: \"Less then, Equal To\",\n      symbol: \"≤\",\n    },\n    {\n      name: \"Square Root\",\n      symbol: \"√\",\n    },\n\n    {\n      name: \"Subset\",\n      symbol: \"⊆\",\n    },\n\n    {\n      name: \"! Belongs To\",\n      symbol: \"∉\",\n    },\n    {\n      name: \"! Subset of\",\n      symbol: \"⊄\",\n    },\n    {\n      name: \"Union\",\n      symbol: \"∪\",\n    },\n    {\n      name: \"Intersection\",\n      symbol: \"∩\",\n    },\n    {\n      name: \"! Equals To\",\n      symbol: \"≠\",\n    },\n    {\n      name: \"Sigma\",\n      symbol: \"∑\",\n    },\n    {\n      name: \"Mu\",\n      symbol: \"μ\",\n    },\n    {\n      name: \"Alpha\",\n      symbol: \"α\",\n    },\n    {\n      name: \"Beta\",\n      symbol: \"β\",\n    },\n    {\n      name: \"Theta\",\n      symbol: \"θ\",\n    },\n    {\n      name: \"Lambda\",\n      symbol: \"λ\",\n    },\n    {\n      name: \"Pi\",\n      symbol: \"π\",\n    },\n    {\n      name: \"Alef\",\n      symbol: \"ℵ\",\n    },\n  ];\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const editorRef = React.useRef(null);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerToggle = () => {\n    setOpen(!open);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerToggle}>\n            {!open ? <MenuIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {sn.map((text, index) => (\n            <CustomListItem\n              name={text.name}\n              symbol={text.symbol}\n              open={open}\n              editor={editorRef}\n            />\n          ))}\n        </List>\n        {/*<Divider />*/}\n        {/*<List>*/}\n        {/*    {['All mail', 'Trash', 'Spam'].map((text, index) => (*/}\n        {/*        <ListItem button key={text}>*/}\n\n        {/*            <ListItemText primary={text} />*/}\n        {/*        </ListItem>*/}\n        {/*    ))}*/}\n        {/*</List>*/}\n      </Drawer>\n      <main className={classes.content}>\n        {/*<div className={classes.toolbar} />*/}\n        <EditorFile ref={editorRef} />\n      </main>\n    </div>\n  );\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport MiniDrawer from \"./Drawer\";\nimport EditorFile from \"./EditorFile\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <MiniDrawer/>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["logo.svg","config.js","InputSlider.js","CustomOption.js","EditorFile.js","CustomListItem.js","Drawer.js","App.js","reportWebVitals.js","index.js"],"names":["symbols","name","symbol","shortCuts","shortcut","withStyles","root","color","height","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","makeStyles","theme","spacing","margin","PrettoSlider","useStyles","avatar","blue","toolbarButtons","button","background","Canvas","props","classes","saveableCanvas","React","useRef","onClose","selectedValue","open","useState","value","setValue","handleClose","saveCanvas","localStorage","setItem","current","getSaveData","Dialog","fullScreen","aria-labelledby","AppBar","className","appBar","Toolbar","IconButton","edge","onClick","aria-label","Typography","variant","title","Grid","container","alignItems","item","xs","onChange","event","newValue","Number","step","min","max","Input","input","target","Math","onBlur","inputProps","type","Button","clear","undo","ref","saveData","getItem","brushRadius","lazyRadius","immediateLoading","style","CustomOption","modalIsOpen","setIsOpen","ControlledEditor","componentDidMount","sendTextToEditor","console","log","replaceString","chars","editorState","contentState","getCurrentContent","selectionState","getSelection","block","getBlockForKey","getAnchorKey","shortcuts","forEach","val","SC","SYM","getText","indexOf","currentSelectionState","state","newContentState","Modifier","replaceText","merge","anchorOffset","getEndOffset","length","focusOffset","setState","EditorState","push","focusEditor","editor","moveFocusToEnd","text","insertText","currentContent","currentSelection","newContent","getCurrentInlineStyle","newEditorState","forceSelection","getSelectionAfter","onEditorStateChange","contentNow","getPlainText","editorText","editorRef","createRef","createEmpty","inlineStyle","Set","options","this","toolbar","list","inDropdown","textAlign","handleBeforeInput","toolbarClassName","wrapperClassName","editorClassName","toolbarCustomButtons","Component","CustomListItem","listItemText","fontSize","filter","v","Tooltip","ListItem","copy","ListItemText","primary","secondary","drawerWidth","display","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","justifyContent","padding","mixins","content","flexGrow","MiniDrawer","sn","useTheme","setOpen","CssBaseline","Drawer","clsx","paper","Divider","List","map","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAAe,I,wICAFA,EAAU,CACnB,CACEC,KAAM,aACNC,OAAQ,UAEV,CACED,KAAM,OACNC,OAAQ,UAEV,CACED,KAAM,UACNC,OAAQ,UAEV,CACED,KAAM,eACNC,OAAQ,UAEV,CACED,KAAM,QACNC,OAAQ,UAEV,CACED,KAAM,cACNC,OAAQ,UAEV,CACED,KAAM,cACNC,OAAQ,UAEV,CACED,KAAM,WACNC,OAAQ,QAEV,CACED,KAAM,cACNC,OAAQ,UAEV,CACED,KAAM,gBACNC,OAAQ,UAEV,CACED,KAAM,cACNC,OAAQ,UAEV,CACED,KAAM,cACNC,OAAQ,UAGV,CACED,KAAM,sBACNC,OAAQ,UAEV,CACED,KAAM,cACNC,OAAQ,UAGV,CACED,KAAM,SACNC,OAAQ,UAGV,CACED,KAAM,eACNC,OAAQ,UAEV,CACED,KAAM,cACNC,OAAQ,UAEV,CACED,KAAM,QACNC,OAAQ,UAEV,CACED,KAAM,eACNC,OAAQ,UAEV,CACED,KAAM,cACNC,OAAQ,UAEV,CACED,KAAM,QACNC,OAAQ,UAEV,CACED,KAAM,KACNC,OAAQ,UAEV,CACED,KAAM,QACNC,OAAQ,UAEV,CACED,KAAM,OACNC,OAAQ,UAEV,CACED,KAAM,QACNC,OAAQ,UAEV,CACED,KAAM,SACNC,OAAQ,UAEV,CACED,KAAM,KACNC,OAAQ,UAEV,CACED,KAAM,OACNC,OAAQ,WAIDC,EAAY,CACrB,CACEC,SAAU,OACVF,OAAQ,UAEV,CACEE,SAAU,SACVF,OAAQ,UAEV,CACEE,SAAU,OACVF,OAAQ,UAEV,CACEE,SAAU,OACVF,OAAQ,UAEV,CACEE,SAAU,UACVF,OAAQ,UAEV,CACEE,SAAU,QACVF,OAAQ,UAEV,CACEE,SAAU,OACVF,OAAQ,UAEV,CACEE,SAAU,QACVF,OAAQ,QAEV,CACEE,SAAU,SACVF,OAAQ,UAEV,CACEE,SAAU,WACVF,OAAQ,UAEV,CACEE,SAAU,SACVF,OAAQ,UAEV,CACEE,SAAU,SACVF,OAAQ,UAGV,CACEE,SAAU,OACVF,OAAQ,UAEV,CACEE,SAAU,QACVF,OAAQ,UAGV,CACEE,SAAU,QACVF,OAAQ,UAGV,CACEE,SAAU,QACVF,OAAQ,UAEV,CACEE,SAAU,SACVF,OAAQ,UAEV,CACEE,SAAU,MACVF,OAAQ,UAEV,CACEE,SAAU,QACVF,OAAQ,UAEV,CACEE,SAAU,OACVF,OAAQ,UAEV,CACEE,SAAU,UACVF,OAAQ,UAEV,CACEE,SAAU,OACVF,OAAQ,UAEV,CACEE,SAAU,UACVF,OAAQ,UAEV,CACEE,SAAU,SACVF,OAAQ,UAEV,CACEE,SAAU,UACVF,OAAQ,UAEV,CACEE,SAAU,WACVF,OAAQ,UAEV,CACEE,SAAU,OACVF,OAAQ,UAEV,CACEE,SAAU,SACVF,OAAQ,W,wLChOOG,YAAW,CAC5BC,KAAM,CACJC,MAAO,UACPC,OAAQ,GAEVC,MAAO,CACLD,OAAQ,GACRE,MAAO,GACPC,gBAAiB,OACjBC,OAAQ,yBACRC,WAAY,EACZC,YAAa,GACb,6BAA8B,CAC5BC,UAAW,YAGfC,OAAQ,GACRC,WAAY,CACVC,KAAM,oBAERC,MAAO,CACLX,OAAQ,EACRY,aAAc,GAEhBC,KAAM,CACJb,OAAQ,EACRY,aAAc,IA1BCf,CA4BhBiB,KACeC,aAAW,SAACC,GAAD,MAAY,CACvClB,KAAM,CACJI,MAAO,IAAyB,EAAnBc,EAAMC,QAAQ,IAE7BC,OAAQ,CACNlB,OAAQgB,EAAMC,QAAQ,Q,YCxBtBE,EAAetB,YAAW,CAC9BC,KAAM,CACJC,MAAO,UACPC,OAAQ,GAEVC,MAAO,CACLD,OAAQ,GACRE,MAAO,GACPC,gBAAiB,OACjBC,OAAQ,yBACRC,WAAY,EACZC,YAAa,GACb,6BAA8B,CAC5BC,UAAW,YAGfC,OAAQ,GACRC,WAAY,CACVC,KAAM,oBAERC,MAAO,CACLX,OAAQ,EACRY,aAAc,GAEhBC,KAAM,CACJb,OAAQ,EACRY,aAAc,IA1BGf,CA4BlBiB,KACGM,EAAYL,aAAW,SAACC,GAAD,MAAY,CACvCK,OAAQ,CACNlB,gBAAiBmB,IAAK,KACtBvB,MAAOuB,IAAK,MAEdC,eAAgB,CACdjB,WAAY,QAEdkB,OAAQ,CACNxB,OAAQ,OACRI,OAAQ,oBACRQ,aAAc,MACda,WAAY,SAGd3B,KAAM,CACJI,MAAO,IAAyB,EAAnBc,EAAMC,QAAQ,GAC3BX,WAAY,YAahB,SAASoB,EAAOC,GACd,IAAMC,EAAUR,IACVS,EAAiBC,IAAMC,OAAO,MAC5BC,EAAiCL,EAAjCK,QAASC,EAAwBN,EAAxBM,cAAeC,EAASP,EAATO,KAHX,EAIKJ,IAAMK,SAAS,GAJpB,mBAIdC,EAJc,KAIPC,EAJO,KAMfC,EAAc,WAClBN,EAAQC,IAGJM,EAAa,WACjBC,aAAaC,QACX,eACAZ,EAAea,QAAQC,gBAqB3B,OACE,eAACC,EAAA,EAAD,CAAQC,YAAU,EAACb,QAASM,EAAaQ,kBAAgB,sBAAsBZ,KAAMA,EAArF,UACE,cAACa,EAAA,EAAD,CAAQC,UAAWpB,EAAQqB,OAA3B,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQrD,MAAM,UAAUsD,QAASf,EAAagB,aAAW,QAA1E,SACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKR,UAAWpB,EAAQ6B,MAA5C,oBAGA,qBAAKT,UAAWpB,EAAQ9B,KAAxB,SACE,eAAC4D,EAAA,EAAD,CAAMC,WAAS,EAAC1C,QAAS,EAAG2C,WAAW,SAAvC,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC,IAAD,MAEF,cAACH,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,EAAb,SACE,cAAC,EAAD,CACE1B,MAAwB,kBAAVA,EAAqBA,EAAQ,EAC3C2B,SAlCW,SAACC,EAAOC,GACjC5B,EAAS6B,OAAOD,KAkCFnB,kBAAgB,eAChBqB,KAAM,EACNC,IAAK,EACLC,IAAK,OAGT,cAACX,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACS,EAAA,EAAD,CACEtB,UAAWpB,EAAQ2C,MACnBnC,MAAOA,EACPlB,OAAO,QACP6C,SA1CU,SAACC,GACzB3B,EAAgC,KAAvB2B,EAAMQ,OAAOpC,MAAe,EAAIqC,KAAKL,IAAIF,OAAOF,EAAMQ,OAAOpC,OAAQ,MA0ChEsC,OAvCG,WACbtC,EAAQ,EACVC,EAAS,GACAD,EAAQ,IACjBC,EAAS,KAoCGsC,WAAY,CACVR,KAAM,EACNC,IAAK,EACLC,IAAK,GACLO,KAAM,SACN,kBAAmB,yBAM7B,sBAAK5B,UAAWpB,EAAQL,eAAxB,UACE,cAACsD,EAAA,EAAD,CAAQ9E,MAAM,UAAUsD,QAAS,WAAQxB,EAAea,QAAQoC,QAASvC,KAAzE,mBAGA,cAACsC,EAAA,EAAD,CAAQ9E,MAAM,UAAUsD,QAAS,WAAQxB,EAAea,QAAQqC,OAAQxC,KAAxE,0BAON,cAAC,IAAD,CACEyC,IAAKnD,EACLoD,SAAUzC,aAAa0C,QAAQ,gBAC/BC,YAAa/C,EACb2B,SAAUxB,EACV6C,WAAY,EACZC,kBAAkB,EAClBC,MAAO,CACLpF,MAAO,OACPF,OAAQ,aAOH,SAASuF,IACtB,IAAM3D,EAAUR,IADqB,EAGJU,IAAMK,UAAS,GAHX,mBAG9BqD,EAH8B,KAGjBC,EAHiB,KAYrC,OACE,gCACE,wBAAQzC,UAAWpB,EAAQJ,OACzB6B,QAXN,WACEoC,GAAU,IASR,oBAEA,cAAC/D,EAAD,CAAQQ,KAAMsD,EAAaxD,QAR/B,WACEyD,GAAU,S,ICtLOC,E,kDACjB,WAAY/D,GAAQ,IAAD,8BACf,cAAMA,IAYVgE,kBAAoB,WAGhB,EAAKC,iBAAiBpD,aAAa0C,QAAQ,eAE3CW,QAAQC,IAAI,yBAAyBtD,aAAa0C,QAAQ,gBAlB3C,EAqBnBa,cAAgB,SAACC,EAAOC,GACpB,IAAMC,EAAeD,EAAYE,oBAC3BC,EAAiBH,EAAYI,eAC7BC,EAAQJ,EAAaK,eAAgBH,EAAeI,gBAE1D,EAAKC,UAAUC,SAAQ,SAACC,GACpB,IAAMC,EAAMD,EAAI/G,SACdiH,EAAMF,EAAIjH,OAEhB,IAAsC,IAAjC4G,EAAMQ,UAAUC,QAAQH,GAAa,CACtC,IAAMI,EAAwB,EAAKC,MAAMhB,YAAYI,eAC/Ca,EAAkBC,WAASC,YAC7BlB,EAEAE,EAAeiB,MAAO,CAElBC,aAAcN,EAAsBO,eAAiBX,EAAGY,OAExDC,YAAaT,EAAsBO,iBAGxCV,GAGH,EAAKa,SAAU,CACXzB,YAAa0B,cAAYC,KACrB3B,EACAiB,EACA,uBAjDG,EAwDnBW,YAAc,WACN,EAAKC,SAELH,cAAYI,eAAe,EAAKd,MAAMhB,aACtCJ,QAAQC,IAAI,iCA5DD,EAgEnBF,iBAAmB,SAACoC,GAChB,EAAKN,SAAS,CAAEzB,YAAa,EAAKgC,WAAWD,EAAM,EAAKf,MAAMhB,eAC9D,EAAK4B,eAlEU,EAqEnBI,WAAa,SAACD,EAAM/B,GAChB,IAAMiC,EAAiBjC,EAAYE,oBAC/BgC,EAAmBlC,EAAYI,eAE7B+B,EAAajB,WAASC,YACxBc,EACAC,EACAH,EACA/B,EAAYoC,yBAGVC,EAAiBX,cAAYC,KAAK3B,EAAamC,EAAY,qBACjE,OAAOT,cAAYY,eAAeD,EAAgBF,EAAWI,sBAjF9C,EAoFnBC,oBAAsB,SAACxC,GACnB,IAAIyC,EAAazC,EAAYE,oBAAoBwC,eACjDnG,aAAaC,QAAQ,aAAciG,GAC/B,EAAKhB,SAAS,CACVzB,YAAaA,EACb2C,WAAYF,IAGpB7C,QAAQC,IAAI,yBAAgE,SAAvCtD,aAAa0C,QAAQ,gBA1F1D,EAAK2D,UAAY/G,IAAMgH,YAEvB,EAAK7B,MAAQ,CACThB,YAAa0B,cAAYoB,cACzBH,WAAY,GACZI,YAAa,IAAIC,KAErB,EAAKxC,UAAY9G,EACjB,EAAKuJ,QAAU,CAAC,SAAU,YAAa,WAAY,aAAc,YAAa,QAAS,WAVxE,E,qDA+FT,IACEjD,EAAgBkD,KAAKlC,MAArBhB,YACR,OACI,8BACI,cAAC,SAAD,CACImD,QAAS,CACLF,QAASC,KAAKD,QACdG,KAAM,CAAEC,YAAY,GACpBC,UAAW,CAAED,YAAY,IAE7BtE,IAAKmE,KAAKN,UACV5C,YAAaA,EACbuD,kBAAoBL,KAAKpD,cACzB0D,iBAAiB,eACjBC,iBAAiB,eACjBC,gBAAgB,cAChBlB,oBAAqBU,KAAKV,oBAC1BmB,qBAAsB,CAAC,cAACrE,EAAD,a,GAjHGsE,a,+CC0B/BC,OA1Bf,SAAwBnI,GACpB,IAAMP,EAAYL,YAAW,CACzBgJ,aAAc,CACVC,SAAU,YAGdvG,EAAQ9D,EAAUsK,QAAO,SAAAC,GAAC,OAC1BA,EAAExK,SAAWiC,EAAMjC,UACrB,GAAGE,SACCgC,EAAUR,IAKhB,OACI,cAAC+I,GAAA,EAAD,CAAS1G,MAAOA,EAAhB,SACI,cAAC2G,EAAA,EAAD,CAAU5I,QAAM,EAAkB6B,QANvB,WACfgH,KAAK1I,EAAMjC,QACXiC,EAAMmG,OAAOpF,QAAQkD,iBAAiBjE,EAAMjC,SAIxC,SACKiC,EAAMO,KAAO,cAACoI,EAAA,EAAD,CAAc1I,QAAS,CAAE2I,QAAS3I,EAAQmI,cAAgBQ,QAAS5I,EAAMjC,OAAQ8K,UAAW7I,EAAMlC,OAE5G,cAAC6K,EAAA,EAAD,CAAc1I,QAAS,CAAE2I,QAAS3I,EAAQmI,cAAgBQ,QAAS5I,EAAMjC,UAH3DiC,EAAMlC,SCTlCgL,GAAc,IAEdrJ,GAAYL,aAAW,SAACC,GAAD,MAAY,CACvClB,KAAM,CACJ4K,QAAS,QAEXzH,OAAQ,CACN0H,OAAQ3J,EAAM2J,OAAOC,OAAS,EAC9BC,WAAY7J,EAAM8J,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQhK,EAAM8J,YAAYE,OAAOC,MACjCC,SAAUlK,EAAM8J,YAAYI,SAASC,iBAGzCC,YAAa,CACX9K,WAAYmK,GACZvK,MAAM,eAAD,OAAiBuK,GAAjB,OACLI,WAAY7J,EAAM8J,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQhK,EAAM8J,YAAYE,OAAOC,MACjCC,SAAUlK,EAAM8J,YAAYI,SAASG,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,KAAM,CACJd,QAAS,QAEXE,OAAQ,CACN1K,MAAOuK,GACPgB,WAAY,EACZC,WAAY,UAEdC,WAAY,CACVzL,MAAOuK,GACPI,WAAY7J,EAAM8J,YAAYC,OAAO,QAAS,CAC5CC,OAAQhK,EAAM8J,YAAYE,OAAOC,MACjCC,SAAUlK,EAAM8J,YAAYI,SAASG,kBAGzCO,YAAY,aACVf,WAAY7J,EAAM8J,YAAYC,OAAO,QAAS,CAC5CC,OAAQhK,EAAM8J,YAAYE,OAAOC,MACjCC,SAAUlK,EAAM8J,YAAYI,SAASC,gBAEvCU,UAAW,SACX3L,MAAOc,EAAMC,QAAQ,GAAK,GACzBD,EAAM8K,YAAYC,GAAG,MAAQ,CAC5B7L,MAAOc,EAAMC,QAAQ,GAAK,IAG9BmI,QAAQ,aACNsB,QAAS,OACT9G,WAAY,SACZoI,eAAgB,WAChBC,QAASjL,EAAMC,QAAQ,EAAG,IAEvBD,EAAMkL,OAAO9C,SAElB+C,QAAS,CACPC,SAAU,EACVH,QAASjL,EAAMC,QAAQ,QAIZ,SAASoL,KAAc,IAAD,IAC7BC,EAAK9M,EAELoC,EAAUR,KAHmB,GAIrBmL,cACUzK,IAAMK,UAAS,IALJ,mBAK5BD,EAL4B,KAKtBsK,EALsB,KAM7B3D,EAAY/G,IAAMC,OAAO,MAY/B,OACE,sBAAKiB,UAAWpB,EAAQ9B,KAAxB,UACE,cAAC2M,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CACElJ,QAAQ,YACRR,UAAW2J,YAAK/K,EAAQgJ,QAAT,mBACZhJ,EAAQ+J,WAAazJ,GADT,cAEZN,EAAQgK,aAAe1J,GAFX,IAIfN,QAAS,CACPgL,MAAOD,aAAI,mBACR/K,EAAQ+J,WAAazJ,GADb,cAERN,EAAQgK,aAAe1J,GAFf,KAPf,UAaE,qBAAKc,UAAWpB,EAAQwH,QAAxB,SACE,cAACjG,EAAA,EAAD,CAAYE,QAxBO,WACzBmJ,GAAStK,IAuBH,SACIA,EAAsB,cAAC,IAAD,IAAf,cAAC,IAAD,QAGb,cAAC2K,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACGR,EAAGS,KAAI,SAAC/E,EAAMgF,GAAP,OACN,cAAC,GAAD,CACEvN,KAAMuI,EAAKvI,KACXC,OAAQsI,EAAKtI,OACbwC,KAAMA,EACN4F,OAAQe,YAchB,sBAAM7F,UAAWpB,EAAQuK,QAAzB,SAEE,cAAC,EAAD,CAAYnH,IAAK6D,SC7HVoE,OATf,WACE,OACE,qBAAKjK,UAAU,MAAf,SACI,cAACqJ,GAAD,OCEOa,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.e87301a1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const symbols = [\n    {\n      name: \"Belongs To\",\n      symbol: \"∈\",\n    },\n    {\n      name: \"Null\",\n      symbol: \"∅\",\n    },\n    {\n      name: \"For All\",\n      symbol: \"∀\",\n    },\n    {\n      name: \"There Exists\",\n      symbol: \"∃\",\n    },\n    {\n      name: \"Delta\",\n      symbol: \"δ\",\n    },\n    {\n      name: \"Conjunction\",\n      symbol: \"∧\",\n    },\n    {\n      name: \"Disjunction\",\n      symbol: \"∨\",\n    },\n    {\n      name: \"Negation\",\n      symbol: \"¬\",\n    },\n    {\n      name: \"Conditional\",\n      symbol: \"→\",\n    },\n    {\n      name: \"Biconditional\",\n      symbol: \"↔\",\n    },\n    {\n      name: \"Implication\",\n      symbol: \"⇒\",\n    },\n    {\n      name: \"Equivalence\",\n      symbol: \"⇔\",\n    },\n\n    {\n      name: \"Less then, Equal To\",\n      symbol: \"≤\",\n    },\n    {\n      name: \"Square Root\",\n      symbol: \"√\",\n    },\n\n    {\n      name: \"Subset\",\n      symbol: \"⊆\",\n    },\n\n    {\n      name: \"! Belongs To\",\n      symbol: \"∉\",\n    },\n    {\n      name: \"! Subset of\",\n      symbol: \"⊄\",\n    },\n    {\n      name: \"Union\",\n      symbol: \"∪\",\n    },\n    {\n      name: \"Intersection\",\n      symbol: \"∩\",\n    },\n    {\n      name: \"! Equals To\",\n      symbol: \"≠\",\n    },\n    {\n      name: \"Sigma\",\n      symbol: \"∑\",\n    },\n    {\n      name: \"Mu\",\n      symbol: \"μ\",\n    },\n    {\n      name: \"Alpha\",\n      symbol: \"α\",\n    },\n    {\n      name: \"Beta\",\n      symbol: \"β\",\n    },\n    {\n      name: \"Theta\",\n      symbol: \"θ\",\n    },\n    {\n      name: \"Lambda\",\n      symbol: \"λ\",\n    },\n    {\n      name: \"Pi\",\n      symbol: \"π\",\n    },\n    {\n      name: \"Alef\",\n      symbol: \"ℵ\",\n    },\n  ];\n\n  export var shortCuts = [\n    {\n      shortcut: \"\\\\bt\",\n      symbol: \"∈\",\n    },\n    {\n      shortcut: \"\\\\null\",\n      symbol: \"∅\",\n    },\n    {\n      shortcut: \"\\\\fa\",\n      symbol: \"∀\",\n    },\n    {\n      shortcut: \"\\\\te\",\n      symbol: \"∃\",\n    },\n    {\n      shortcut: \"\\\\delta\",\n      symbol: \"δ\",\n    },\n    {\n      shortcut: \"\\\\and\",\n      symbol: \"∧\",\n    },\n    {\n      shortcut: \"\\\\or\",\n      symbol: \"∨\",\n    },\n    {\n      shortcut: \"\\\\not\",\n      symbol: \"¬\",\n    },\n    {\n      shortcut: \"\\\\cond\",\n      symbol: \"→\",\n    },\n    {\n      shortcut: \"\\\\bicond\",\n      symbol: \"↔\",\n    },\n    {\n      shortcut: \"\\\\impl\",\n      symbol: \"⇒\",\n    },\n    {\n      shortcut: \"\\\\equi\",\n      symbol: \"⇔\",\n    },\n\n    {\n      shortcut: \"\\\\<=\",\n      symbol: \"≤\",\n    },\n    {\n      shortcut: \"\\\\sqr\",\n      symbol: \"√\",\n    },\n\n    {\n      shortcut: \"\\\\sub\",\n      symbol: \"⊆\",\n    },\n\n    {\n      shortcut: \"\\\\!bt\",\n      symbol: \"∉\",\n    },\n    {\n      shortcut: \"\\\\!sub\",\n      symbol: \"⊄\",\n    },\n    {\n      shortcut: \"\\\\U\",\n      symbol: \"∪\",\n    },\n    {\n      shortcut: \"\\\\int\",\n      symbol: \"∩\",\n    },\n    {\n      shortcut: \"\\\\!=\",\n      symbol: \"≠\",\n    },\n    {\n      shortcut: \"\\\\sigma\",\n      symbol: \"∑\",\n    },\n    {\n      shortcut: \"\\\\mu\",\n      symbol: \"μ\",\n    },\n    {\n      shortcut: \"\\\\alpha\",\n      symbol: \"α\",\n    },\n    {\n      shortcut: \"\\\\beta\",\n      symbol: \"β\",\n    },\n    {\n      shortcut: \"\\\\theta\",\n      symbol: \"θ\",\n    },\n    {\n      shortcut: \"\\\\lambda\",\n      symbol: \"λ\",\n    },\n    {\n      shortcut: \"\\\\pi\",\n      symbol: \"π\",\n    },\n    {\n      shortcut: \"\\\\alef\",\n      symbol: \"ℵ\",\n    },\n  ];","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport BrushIcon from '@material-ui/icons/Brush';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nconst PrettoSlider = withStyles({\n    root: {\n      color: '#52af77',\n      height: 8,\n    },\n    thumb: {\n      height: 24,\n      width: 24,\n      backgroundColor: '#fff',\n      border: '2px solid currentColor',\n      marginTop: -8,\n      marginLeft: -12,\n      '&:focus, &:hover, &$active': {\n        boxShadow: 'inherit',\n      },\n    },\n    active: {},\n    valueLabel: {\n      left: 'calc(-50% + 4px)',\n    },\n    track: {\n      height: 8,\n      borderRadius: 4,\n    },\n    rail: {\n      height: 8,\n      borderRadius: 4,\n    },\n  })(Slider);\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: 300 + theme.spacing(3) * 2,\n    },\n    margin: {\n      height: theme.spacing(3),\n    },\n  }));\n\nexport default function InputSlider() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(30);\n\n  const handleSliderChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = (event) => {\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const handleBlur = () => {\n    if (value < 0) {\n      setValue(0);\n    } else if (value > 100) {\n      setValue(100);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item>\n          <BrushIcon />\n        </Grid>\n        <Grid item xs>\n          <PrettoSlider\n            value={typeof value === 'number' ? value : 0}\n            onChange={handleSliderChange}\n            aria-labelledby=\"input-slider\"\n          />\n        </Grid>\n        <Grid item>\n          <Input\n            className={classes.input}\n            value={value}\n            margin=\"dense\"\n            onChange={handleInputChange}\n            onBlur={handleBlur}\n            inputProps={{\n              step: 10,\n              min: 0,\n              max: 100,\n              type: 'number',\n              'aria-labelledby': 'input-slider',\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","import React from 'react';\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport { blue } from '@material-ui/core/colors';\nimport CanvasDraw from \"react-canvas-draw\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport InputSlider from './InputSlider';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport BrushIcon from '@material-ui/icons/Brush';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nconst PrettoSlider = withStyles({\n  root: {\n    color: '#52af77',\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n  toolbarButtons: {\n    marginLeft: 'auto',\n  },\n  button: {\n    height: '28px',\n    border: '1px solid #F1F1F1',\n    borderRadius: '2px',\n    background: 'white',\n\n  },\n  root: {\n    width: 300 + theme.spacing(3) * 2,\n    marginLeft: 'auto',\n    // marginRight: 'auto',\n  },\n  // margin: {\n  //   height: theme.spacing(3),\n  // },\n}));\n\n\n// const useStyles = makeStyles({\n\n// });\n\nfunction Canvas(props) {\n  const classes = useStyles();\n  const saveableCanvas = React.useRef(null);\n  const { onClose, selectedValue, open } = props;\n  const [value, setValue] = React.useState(4);\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const saveCanvas = () => {\n    localStorage.setItem(\n      \"savedDrawing\",\n      saveableCanvas.current.getSaveData()\n    );\n  }\n\n\n  const handleSliderChange = (event, newValue) => {\n    setValue(Number(newValue));\n  };\n\n  const handleInputChange = (event) => {\n    setValue(event.target.value === '' ? 0 : Math.min(Number(event.target.value), 30));\n  };\n\n  const handleBlur = () => {\n    if (value < 0) {\n      setValue(0);\n    } else if (value > 30) {\n      setValue(30);\n    }\n  };\n\n  return (\n    <Dialog fullScreen onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Canvas\n            </Typography>\n          <div className={classes.root}>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item>\n                <BrushIcon />\n              </Grid>\n              <Grid item xs>\n                <PrettoSlider\n                  value={typeof value === 'number' ? value : 0}\n                  onChange={handleSliderChange}\n                  aria-labelledby=\"input-slider\"\n                  step={2}\n                  min={1}\n                  max={30}\n                />\n              </Grid>\n              <Grid item>\n                <Input\n                  className={classes.input}\n                  value={value}\n                  margin=\"dense\"\n                  onChange={handleInputChange}\n                  onBlur={handleBlur}\n                  inputProps={{\n                    step: 2,\n                    min: 1,\n                    max: 30,\n                    type: 'number',\n                    'aria-labelledby': 'input-slider',\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </div>\n          <div className={classes.toolbarButtons}>\n            <Button color=\"inherit\" onClick={() => { saveableCanvas.current.clear(); saveCanvas(); }}>\n              Clear\n            </Button>\n            <Button color=\"inherit\" onClick={() => { saveableCanvas.current.undo(); saveCanvas(); }}>\n              Undo\n            </Button>\n          </div>\n\n        </Toolbar>\n      </AppBar>\n      <CanvasDraw\n        ref={saveableCanvas}\n        saveData={localStorage.getItem(\"savedDrawing\")}\n        brushRadius={value}\n        onChange={saveCanvas}\n        lazyRadius={0}\n        immediateLoading={true}\n        style={{\n          width: '100%',\n          height: '100%',\n        }}\n      />\n    </Dialog>\n  );\n}\n\nexport default function CustomOption() {\n  const classes = useStyles();\n  var subtitle;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return (\n    <div>\n      <button className={classes.button}\n        onClick={openModal}>Canvas</button>\n      <Canvas open={modalIsOpen} onClose={closeModal} />\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { EditorState, ContentState, Modifier, SelectionState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { shortCuts } from \"./config\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport CustomOption from \"./CustomOption.js\";\n\n\nexport default class ControlledEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.editorRef = React.createRef();\n\n        this.state = {\n            editorState: EditorState.createEmpty(),\n            editorText: '',\n            inlineStyle: new Set(),\n        };\n        this.shortcuts = shortCuts;\n        this.options = ['inline', 'blockType', 'fontSize', 'fontFamily', 'textAlign', 'emoji', 'history'];\n    }\n\n    componentDidMount = () => {\n       // var text = localStorage.getItem('editorText') === 'true'?localStorage.getItem('editorText'):'';\n      //  console.log(\"In component did mount \",localStorage.getItem('editorText') === 'true')\n        this.sendTextToEditor(localStorage.getItem('editorText'));\n        //Content getting\n        console.log(\"In component did mount\",localStorage.getItem('editorText'))\n    }\n\n    replaceString = (chars, editorState) => {\n        const contentState = editorState.getCurrentContent();\n        const selectionState = editorState.getSelection();\n        const block = contentState.getBlockForKey( selectionState.getAnchorKey() );\n\n        this.shortcuts.forEach((val) => {\n            const SC =  val.shortcut;\n        const SYM = val.symbol;\n        // Detect a match. Can be substituted with a RegEx test condition.\n        if ( block.getText().indexOf(SC) !== -1 ) {\n            const currentSelectionState = this.state.editorState.getSelection();\n            const newContentState = Modifier.replaceText(\n                contentState,\n                // The text to replace, which is represented as a range with a start & end offset.\n                selectionState.merge( {\n                    // The starting position of the range to be replaced.\n                    anchorOffset: currentSelectionState.getEndOffset() - SC.length,\n                    // The end position of the range to be replaced.\n                    focusOffset: currentSelectionState.getEndOffset()\n                } ),\n                // The new string to replace the old string.\n               SYM\n            );\n\n            this.setState( {\n                editorState: EditorState.push(\n                    editorState,\n                    newContentState,\n                    'replace-text'\n                )\n            } )\n        }\n    });\n    }\n\n    focusEditor = () => {\n        if (this.editor) {\n            //   this.editor.focusEditor();\n            EditorState.moveFocusToEnd(this.state.editorState)\n            console.log(\"1. Editor has the focus now\");\n        }\n    };\n\n    sendTextToEditor = (text) => {\n        this.setState({ editorState: this.insertText(text, this.state.editorState) });\n        this.focusEditor();\n    }\n\n    insertText = (text, editorState) => {\n        const currentContent = editorState.getCurrentContent(),\n            currentSelection = editorState.getSelection();\n\n        const newContent = Modifier.replaceText(\n            currentContent,\n            currentSelection,\n            text,\n            editorState.getCurrentInlineStyle()\n        );\n\n        const newEditorState = EditorState.push(editorState, newContent, 'insert-characters');\n        return EditorState.forceSelection(newEditorState, newContent.getSelectionAfter());\n    }\n\n    onEditorStateChange = (editorState) => {\n        var contentNow = editorState.getCurrentContent().getPlainText();\n        localStorage.setItem('editorText', contentNow);\n            this.setState({\n                editorState: editorState,\n                editorText: contentNow,\n            });\n\n        console.log(\"In editor state change\",localStorage.getItem('editorText') === 'true')\n    };\n\n    render() {\n        const { editorState } = this.state;\n        return (\n            <div>\n                <Editor\n                    toolbar={{\n                        options: this.options,\n                        list: { inDropdown: true },\n                        textAlign: { inDropdown: true },\n                      }}\n                    ref={this.editorRef}\n                    editorState={editorState}\n                    handleBeforeInput={ this.replaceString }\n                    toolbarClassName=\"demo-toolbar\"\n                    wrapperClassName=\"demo-wrapper\"\n                    editorClassName=\"demo-editor\"\n                    onEditorStateChange={this.onEditorStateChange}\n                    toolbarCustomButtons={[<CustomOption />]}\n                />\n            </div>\n\n        )\n    }\n}\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport copy from 'copy-to-clipboard'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { shortCuts } from './config';\nimport { Tooltip } from \"@material-ui/core\";\n\nfunction CustomListItem(props) {\n    const useStyles = makeStyles({\n        listItemText: {\n            fontSize: '1.5rem'\n        }\n    });\n    var title = shortCuts.filter(v =>\n        v.symbol === props.symbol\n    )[0].shortcut;\n    const classes = useStyles();\n    const customCopy = () => {\n        copy(props.symbol);\n        props.editor.current.sendTextToEditor(props.symbol);\n    }\n    return (\n        <Tooltip title={title}>\n            <ListItem button key={props.name} onClick={customCopy}>\n                {props.open ? <ListItemText classes={{ primary: classes.listItemText }} primary={props.symbol} secondary={props.name} />\n                    :\n                    <ListItemText classes={{ primary: classes.listItemText }} primary={props.symbol} />}\n\n            </ListItem>\n        </Tooltip>\n    );\n}\n\nexport default CustomListItem;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport {symbols} from \"./config\";\n\nimport EditorFile from \"./EditorFile\";\nimport CustomListItem from \"./CustomListItem\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default function MiniDrawer() {\n  const sn = symbols;\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const editorRef = React.useRef(null);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerToggle = () => {\n    setOpen(!open);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerToggle}>\n            {!open ? <MenuIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {sn.map((text, index) => (\n            <CustomListItem\n              name={text.name}\n              symbol={text.symbol}\n              open={open}\n              editor={editorRef}\n            />\n          ))}\n        </List>\n        {/*<Divider />*/}\n        {/*<List>*/}\n        {/*    {['All mail', 'Trash', 'Spam'].map((text, index) => (*/}\n        {/*        <ListItem button key={text}>*/}\n\n        {/*            <ListItemText primary={text} />*/}\n        {/*        </ListItem>*/}\n        {/*    ))}*/}\n        {/*</List>*/}\n      </Drawer>\n      <main className={classes.content}>\n        {/*<div className={classes.toolbar} />*/}\n        <EditorFile ref={editorRef} />\n      </main>\n    </div>\n  );\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport MiniDrawer from \"./Drawer\";\nimport EditorFile from \"./EditorFile\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <MiniDrawer/>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}